generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  admin_id        String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username        String     @db.VarChar(255) @unique
  hashed_password String     @db.VarChar(255)
  articles        articles[]
}

model articles {
  articles_id    String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content        String          @db.VarChar(255)
  image_url      String?         @db.VarChar(255)
  published_date DateTime?       @default(now()) @db.Date
  admin_id       String?         @db.Uuid
  category_id    String?         @db.Uuid
  title          String          @db.VarChar(255)
  slug String? @db.VarChar(255) @unique
  status         status?         @default(DRAFT)
  admin          admin?          @relation(fields: [admin_id], references: [admin_id], onUpdate: NoAction, map: "fk_admin")
  category       category?       @relation(fields: [category_id], references: [category_id], onUpdate: NoAction, map: "fk_category")

  @@index([admin_id], map: "idx_articles_admin")
  @@index([category_id], map: "idx_articles_category")
  @@index([published_date], map: "idx_articles_published_date")
}

model category {
  category_id String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String     @db.VarChar(255) @unique
  articles    articles[]
}

model guru{
  guru_id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @db.VarChar(255)
  jabatan String @db.VarChar(255)
  image_url String? @db.VarChar(255)
  nip String? @db.VarChar(255)
  extracurriculars extracurriculars[]

}

model facilities{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @db.VarChar(255)
  image_url String? @db.VarChar(255)
  description String? @db.VarChar(255)
  location String? @db.VarChar(255)
  status status_facilities @default(TERSEDIA) 
}
model majors{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @db.VarChar(255)
  description String? @db.VarChar(255)
  image_url String? @db.VarChar(255)
}
model announcements{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title String @db.VarChar(255)
  content String @db.VarChar(255)
  date DateTime @db.Date @default(now())
  image_url String? @db.VarChar(255)
  status status @default(DRAFT)
}

model extracurriculars{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @db.VarChar(255)
  image_url String? @db.VarChar(255)
  description String? @db.VarChar(255)
  guru_id String? @db.Uuid
  guru guru? @relation(fields: [guru_id], references: [guru_id], onUpdate: NoAction, map: "fk_guru")

}

enum status_facilities{
  TERSEDIA
  PERBAIKAN
  DIGUNAKAN
}

enum status{
  DRAFT
  PUBLISHED
}